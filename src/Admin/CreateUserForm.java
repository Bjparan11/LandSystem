/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import Logs.Login;
import dbConnect.PasswordHasher;
import dbConnect.dbConnector;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Windows 10
 */
public class CreateUserForm extends javax.swing.JFrame {

    /**
     * Creates new form CreateUserForm
     */
    public CreateUserForm() {
        initComponents();
    }

     public static String phone,usname;
   

    
    public boolean duplicateCheck()
    {
        dbConnector dbc = new dbConnector();
        String c = cnum.getText().trim();
        String us = username.getText().trim();
        
        try
        {
            String query = "SELECT * FROM tbl_user WHERE i_username='"+ us +"'OR i_phonenumber='"+ c +"'";
            ResultSet resultSet = dbc.getData(query);
            if(resultSet.next())
            {
                phone = resultSet.getString("i_phone");
                if(phone.equals(c))
                {
                    JOptionPane.showMessageDialog(null, "Phone Number is Already Used");
                    cnum.setText("");
                }
                
                usname = resultSet.getString("i_username");
                if(usname.equals(us))
                {
                    JOptionPane.showMessageDialog(null, "Username is Already Used");
                    username.setText("");
                }
                return true;
            }else
            {
                return false;
            }
        }catch(SQLException ex)
        {
            System.out.println(""+ex);
            return false;
        }
    }
    
    public boolean updateCheck()
    {
        dbConnector dbc = new dbConnector();
        String u = IID.getText().trim();
        String c = cnum.getText().trim();
        String us = username.getText().trim();
        
        try
        {
            String query = "SELECT * FROM tbl_user WHERE (i_username='"+ us +"'OR i_phonenumber='"+ c +"') AND i_id != '"+u+"'";
            ResultSet resultSet = dbc.getData(query);
            if(resultSet.next())
            {
                phone = resultSet.getString("i_phonenumber");
                if(phone.equals(c))
                {
                    JOptionPane.showMessageDialog(null, "Phone Number is Already Used");
                    cnum.setText("");
                }
                
                usname = resultSet.getString("i_username");
                if(usname.equals(us))
                {
                    JOptionPane.showMessageDialog(null, "Username is Already Used");
                    username.setText("");
                }
                return true;
            }else
            {
                return false;
            }
        }catch(SQLException ex)
        {
            System.out.println(""+ex);
            return false;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        name1 = new javax.swing.JLabel();
        IID = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        LastName = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        dob1 = new javax.swing.JLabel();
        dob = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        stats1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cnum = new javax.swing.JTextField();
        stats2 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        status = new javax.swing.JComboBox<>();
        stats = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        register = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        cpassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        name1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        name1.setText("USER ID :");
        jPanel1.add(name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 20));

        IID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IIDActionPerformed(evt);
            }
        });
        jPanel1.add(IID, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 180, 30));

        name.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        name.setText("FIRSTNAME:");
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 90, 20));

        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });
        jPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 180, 30));

        lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnameActionPerformed(evt);
            }
        });
        jPanel1.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 170, 30));

        LastName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        LastName.setText("LASTNAME:");
        jPanel1.add(LastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 80, 20));

        user.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        user.setText("USERNAME:");
        jPanel1.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 170, 30));

        dob1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        dob1.setText("PASSWORD:");
        jPanel1.add(dob1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        dob.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        dob.setText("CONFIRM PASSWORD :");
        jPanel1.add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, -1, -1));

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        jPanel1.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 190, 30));

        stats1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stats1.setText("EMAIL:");
        jPanel1.add(stats1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("PHONENUMBER:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, -1));

        cnum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cnumActionPerformed(evt);
            }
        });
        jPanel1.add(cnum, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 190, 30));

        stats2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stats2.setText("ACCOUNT TYPE :");
        jPanel1.add(stats2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, 120, 20));

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User", "Admin" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });
        jPanel1.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, 190, 30));

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Pending" }));
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 260, 190, 30));

        stats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        stats.setText("USER STATUS :");
        jPanel1.add(stats, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 270, 110, -1));

        add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        add.setText("ADD");
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 100, 30));

        update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        update.setText("UPDATE");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 100, 30));

        remove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remove.setText("REMOVE");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel1.add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 320, 100, 30));

        refresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel1.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 100, 30));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 320, 100, 30));

        register.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        register.setText("REGISTER");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });
        jPanel1.add(register, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 100, 30));

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Creat User Form");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 300, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 50));
        jPanel1.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 190, 30));
        jPanel1.add(cpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 190, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 360));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        if(fname.getText().isEmpty() || lname.getText().isEmpty() || email.getText().isEmpty() || username.getText().isEmpty()
            || cpassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "All fields are required!");
        }else if(cpassword.getText().length() < 8){
            JOptionPane.showMessageDialog(null, "Characters password is 8 above!");
            cpassword.setText("");
        }else if(!isValidEmail(email.getText())){
            JOptionPane.showMessageDialog(null, "Invalid Email");
        } else if (!isNumeric(cnum.getText())) {
            JOptionPane.showMessageDialog(null, "Contact number must contain only numbers.");
        }else if(cnum.getText().length() > 15 || cnum.getText().length() < 11)
        {
            JOptionPane.showMessageDialog(null, "Invalid Phone num");
        }else{

            dbConnector dbc = new dbConnector();

            if (dbc.insertData("INSERT INTO user(i_fname, i_lname, i_username, i_password, i_email, i_phonenumber, i_type, status) "
                + "VALUES('" + fname.getText() + "', '" + lname.getText() + "', '"
                + username.getText() + "', '" + cpassword.getText() + "', '"
                + email.getText() + "','" + cnum.getText() + "', '" + type.getSelectedItem().toString() + "', 'PENDING')")) {
            JOptionPane.showMessageDialog(null, "Register Successfully");

            Login ads = new Login();
            ads.setVisible(true);
            this.dispose();

        }else{
            JOptionPane.showMessageDialog(null, "Connection Error!");
        }
        }
    }//GEN-LAST:event_fnameActionPerformed

    private void lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnameActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed

    }//GEN-LAST:event_registerActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        U_Admin ua = new U_Admin();
        ua.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if(fname.getText().isEmpty() || lname.getText().isEmpty() || email.getText().isEmpty() || username.getText().isEmpty()
            || cpassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "All fields are required!");
        }else if(cpassword.getText().length() < 8){
            JOptionPane.showMessageDialog(null, "Characters password is 8 above!");
            cpassword.setText("");
        }else if(!isValidEmail(email.getText())){
            JOptionPane.showMessageDialog(null, "Invalid Email");
        } else if (!isNumeric(cnum.getText())) {
            JOptionPane.showMessageDialog(null, "Contact number must contain only numbers.");
        }else if(cnum.getText().length() > 15 || cnum.getText().length() < 11)
        {
            JOptionPane.showMessageDialog(null, "Invalid Phone num");
        }else{

            dbConnector dbc = new dbConnector();

            dbc.updateData("UPDATE user Set i_fname = '" + fname.getText() + "', i_lname =  '" + lname.getText() + "', i_username = '"+ username.getText() + "'"
                + ", i_password = '" + cpassword.getText() + "', i_email = '"+ email.getText() + "', i_phonenumber = '" + cnum.getText() + "', i_type = '" + type.getSelectedItem().toString() + "', "
                + "status = '" + status.getSelectedItem().toString() + "'");

            U_Admin ua = new U_Admin();
            ua.setVisible(true);
            this.dispose();

        }
    }//GEN-LAST:event_updateActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshActionPerformed

    private void cnumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cnumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cnumActionPerformed

    private void IIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IIDActionPerformed

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
    dbConnector dbc = new dbConnector();
        String fn = fname.getText().trim();
        String ln = lname.getText().trim();
        String uname = username.getText().trim();
        String pass = new String(password.getText()).trim();
        String cpass = new String(cpassword.getText()).trim();
        
        String c = cnum.getText().trim();
        String at = type.getSelectedItem().toString().trim();
        String s = status.getSelectedItem().toString().trim();


        if(uname.isEmpty() || pass.isEmpty() || cpass.isEmpty() || ln.isEmpty() || fn.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please Fill All Boxes");

        }else if(!pass.equals(cpass))
        {
            JOptionPane.showMessageDialog(null, "Password Does Not Match");
            //System.out.println("Password ["+password+"] Length: "+password.length());
            //System.out.println("Confirm Password ["+Cpassword+"] Length: "+Cpassword.length());
        }else if(!cpass.matches("\\d+"))
        {
            JOptionPane.showMessageDialog(null, "Phone Must Only Contain Numbers");
        }else if(pass.length() <= 7)
        {
            JOptionPane.showMessageDialog(null, "Password Must be Exactly 8 Characters Long");
        }else if(cpass.length() > 15 || cpass.length() < 11)
        {
            JOptionPane.showMessageDialog(null, "Invalid Phone num");
        }else if(duplicateCheck())
        {
            System.out.println("Duplicate Exists");
        }else
        {
            try
            {
                String npass = PasswordHasher.hashPassword(password.getText());
                
                dbc.insertData("INSERT INTO tbl_users (i_fname, i_lname, i_username, i_type, i_password, i_phonenumber, i_status) "
                        + "VALUES ('" + fn + "', '" + ln + "', '" + uname + "', '" + at + "','" + npass + "', '" + c + "',  '" + s + "')");
                JOptionPane.showMessageDialog(null, "Registered succesfully!");
                U_Admin ua = new U_Admin();
                ua.setVisible(true);
                this.dispose();
            } catch(NoSuchAlgorithmException ex) 
            {
                System.out.println("" + ex);
            }
        }    
    }//GEN-LAST:event_addMouseClicked

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
       dbConnector dbc = new dbConnector();
        String u = IID.getText().trim();
        String fn = fname.getText().trim();
        String ln = lname.getText().trim();
        String uname = username.getText().trim();
        String pass = new String(password.getPassword()).trim();
        String cpass = new String(cpassword.getPassword()).trim();
        String c = cnum.getText().trim();
        String at = type.getSelectedItem().toString().trim();
        String s = status.getSelectedItem().toString().trim();
        
        
        if(uname.isEmpty() || pass.isEmpty() || cpass.isEmpty() || ln.isEmpty() || fn.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please Fill All Boxes");

        }else if(!pass.equals(cpass))
        {
            JOptionPane.showMessageDialog(null, "Password Does Not Match");
            //System.out.println("Password ["+password+"] Length: "+password.length());
            //System.out.println("Confirm Password ["+Cpassword+"] Length: "+Cpassword.length());
        }else if(!pass.matches("\\d+"))
        {
            JOptionPane.showMessageDialog(null, "Phone Must Only Contain Numbers");
        }else if(pass.length() <= 7)
        {
            JOptionPane.showMessageDialog(null, "Password Must be Exactly 8 Characters Long");
        }else if(cpass.length() > 15 || cpass.length() < 11)
        {
            JOptionPane.showMessageDialog(null, "Invalid Phone num");
        }else if(updateCheck())
        {
            System.out.println("Duplicate Exists");
        }else
        {
            try {
                String npass = PasswordHasher.hashPassword(password.getText());

                dbc.updateData("UPDATE tbl_user SET i_fname = '" + fn + "', i_lname = '" + ln + "', i_username = '" + uname + "',"
                            + " i_password = '"+cpass+"', i_phonenumber = '"+npass+"', i_type = '"+at+"', i_status = '"+s+"' WHERE i_id = '"+u+"'");
                U_Admin ua = new U_Admin();
                ua.setVisible(true);
                this.dispose();
            } catch (NoSuchAlgorithmException ex) {
                System.out.println("" + ex);
            }
        }
        
    }//GEN-LAST:event_updateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateUserForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateUserForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField IID;
    private javax.swing.JLabel LastName;
    public javax.swing.JButton add;
    public javax.swing.JTextField cnum;
    private javax.swing.JPasswordField cpassword;
    private javax.swing.JLabel dob;
    private javax.swing.JLabel dob1;
    public javax.swing.JTextField email;
    public javax.swing.JTextField fname;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JTextField lname;
    private javax.swing.JLabel name;
    private javax.swing.JLabel name1;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton refresh;
    private javax.swing.JButton register;
    private javax.swing.JButton remove;
    private javax.swing.JLabel stats;
    private javax.swing.JLabel stats1;
    private javax.swing.JLabel stats2;
    public javax.swing.JComboBox<String> status;
    public javax.swing.JComboBox<String> type;
    public javax.swing.JButton update;
    private javax.swing.JLabel user;
    public javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
private boolean isValidEmail(String text) {
        String regex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$";
    Pattern pattern = Pattern.compile(regex);
    Matcher matcher = pattern.matcher(text);
    return matcher.matches();

    }
    
    private boolean isNumeric(String text) {
        try {
        Double.parseDouble(text);
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
    }
}

